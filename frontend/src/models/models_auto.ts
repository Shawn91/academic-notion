/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = Record<string, never>;

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description 由谁创建或修改 */
    NCreateEditBy: {
      /** @enum {string} */
      type: "user";
      id: string;
    };
    /** @description 封面图 */
    NCover: {
      /** @enum {string} */
      type: "external";
      external: Record<string, never>;
    };
    /** @description 图标 */
    NIcon: {
      /** @enum {string} */
      type: "emoji";
      emoji: string;
    };
    NParent: {
      /**
       * @description 这里只列举了目前已知值
       * @enum {string}
       */
      type: "workspace" | "page_id" | "database_id";
      workspace?: boolean;
      database_id?: string;
      /** @description 如果 parent 是 page，那么这里就是 page 的 id */
      page_id?: string;
    };
    /** @description 属性（即每个表格的每一列信息） */
    NProperty: {
      id: string;
      /** @description 表示这一列是文本、日期、多选等 */
      type: string;
      /** @description 这一列展示出来的列名 */
      name: string;
      rich_text?: Record<string, never>;
    };
    /** @description 文本样式注解。目前已知的应用场景是 Page 或 Database 的 title 的样式 */
    NAnnotations: {
      bold: boolean;
      italic: boolean;
      strikethrough: boolean;
      underline: boolean;
      code: boolean;
      color: string;
    };
    NTextLink: {
      content?: string;
      link?: string | null;
    };
    /** @description Page 或 Database 的 title */
    NTitle: {
      annotations: components["schemas"]["NAnnotations"];
      href?: string | null;
      plain_text: string;
      text: components["schemas"]["NTextLink"];
      /**
       * @description 这里只列举了目前已知值
       * @enum {string}
       */
      type: "text";
    };
    /** @description 一个 page 或 database 的 schema 信息 */
    NPDInfo: {
      /** @description page 或 database 的 id */
      id: string;
      /** @enum {string} */
      object: "page" | "database";
      created_time: string;
      last_edited_time: string;
      created_by: components["schemas"]["NCreateEditBy"];
      last_edited_by: components["schemas"]["NCreateEditBy"];
      cover?: components["schemas"]["NCover"];
      icon?: components["schemas"]["NIcon"];
      parent: components["schemas"]["NParent"];
      archived: boolean;
      in_trash: boolean;
      /** @description 一个 dict，key 是展示出来的列名（即 Property.name），value 是 Property */
      properties: {
        [key: string]: components["schemas"]["NProperty"];
      };
      /** @description 内容尚不详 */
      description: Record<string, never>[];
      /** @description 应该是只有 database 才有 */
      is_inline: boolean;
      public_url?: string | null;
      /** @description page 或 database 的 title。尚不清楚为何返回的是一个 list */
      title: components["schemas"]["NTitle"][];
      url?: string | null;
    };
    /**
     * @description 是书、会议论文、期刊论文、还是别的类型。主要内容来自 crossref.org 的论文类型，https://api.crossref.org/v1/types。
     * @enum {string}
     */
    WorkType: "book-section" | "monograph" | "report-component" | "report" | "peer-review" | "book-track" | "journal-article" | "book-part" | "other" | "book" | "journal-volume" | "book-set" | "reference-entry" | "proceedings-article" | "journal" | "component" | "book-chapter" | "proceedings-series" | "report-series" | "proceedings" | "database" | "standard" | "reference-book" | "posted-content" | "journal-issue" | "dissertation" | "grant" | "dataset" | "book-series" | "edited-book";
    /** @description 内容主要来自 crossref.org 的 DOI 数据。出版日期取自其 issued 字段 */
    PublishInfo: {
      publisher?: string;
      containerTitle?: string;
      issue?: string;
      volume?: string;
      pages?: string;
      year?: number;
      month?: number;
      day?: number;
    };
    Author: {
      familyName?: string;
      givenName?: string;
      fullName?: string;
      /** @description Researcher's ID, can be found at https://orcid.org */
      ORCID?: string;
    };
    /** @description 原始内容下载链接 */
    DigitalResource: {
      /**
       * Format: uri
       * @description 原始内容的下载链接
       */
      url?: string;
      /** @description 原始内容的 mime 类型 */
      contentType?: string;
    };
    ClinicalTrial: {
      /** @description 临床试验的 id 号 */
      id?: string;
      /** @description 临床试验的注册机构的 DOI */
      registry?: string;
    };
    /**
     * @description 从哪个平台获取到的文献。不是该文献的来源，而是从哪个平台获取到的
     * @enum {string}
     */
    Platform: "arXiv";
    Work: {
      title?: string;
      /** @description 副标题 */
      subtitle?: string;
      authors?: components["schemas"]["Author"][];
      abstract?: string;
      /** @description 所属领域。对应 arxiv 的 category 字段 */
      subjects?: string[];
      DOI?: string;
      platform?: components["schemas"]["Platform"];
      platformId?: string;
      /**
       * Format: uri
       * @description 详情页链接
       */
      url?: string;
      /** @description 作者添加的注释，一般包含的内容：论文有多少页；相关数据可以在哪下载；等等 */
      authorComments?: string[];
      publishInfo?: components["schemas"]["PublishInfo"];
      /** @description 被引用次数 */
      referencedByCount?: number;
      type?: components["schemas"]["WorkType"];
      ISBN?: string[];
      digitalResources?: components["schemas"]["DigitalResource"][];
      clinicalTrial?: components["schemas"]["ClinicalTrial"][];
      /** @description 参考文献 */
      references?: components["schemas"]["Work"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
